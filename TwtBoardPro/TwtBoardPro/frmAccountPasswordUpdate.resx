<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>